# Standard library for mshell

# each (list quote --)
def each 
    over len # Get total length
    0 # index
    (
        [(over over <=) (break)] if
        # list quote len index index  
        dup 5 pick nth 
        # list quote len index item
        4 pick x
        drop
        1 + # inc index
    ) loop

    # Drop list and quote, total length, index
    drop drop drop drop
end

# map (list quote -- list)
def map 
    over len @map-len # Get total length
    0 @map-idx # Index
    [] @map-accum # Accumulator
    (
        [(map-idx! map-len! >=) (break)] if
        over map-idx! nth # Get current item
        over x # Copy over quote, execute

        # list quote new-item
        map-accum! append drop # Append to accumulator
        map-idx! 1 + @map-idx # inc index
    ) loop

    # Drop list and quote, push accumulator
    drop drop map-accum!
end

# map (list quote -- list)
# [seq 1 1000]o; ("Line #" over str + wl) each
# [1 2 3] (2 +) map .s
